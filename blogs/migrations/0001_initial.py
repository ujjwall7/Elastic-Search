# Generated by Django 3.2.12 on 2025-03-14 13:13

import blogs.models
import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(null=True)),
                ('image', models.ImageField(null=True, upload_to=blogs.models.rename_file)),
                ('website', models.URLField(null=True)),
                ('facebook', models.URLField(null=True)),
                ('instagram', models.URLField(null=True)),
                ('youtube', models.URLField(null=True)),
                ('twitter', models.URLField(null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('meta_title', models.TextField(blank=True, max_length=500, null=True)),
                ('meta_description', models.TextField(blank=True, max_length=500, null=True)),
                ('meta_keywords', models.TextField(blank=True, max_length=500, null=True)),
                ('canonical_tag', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Author',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(null=True, upload_to=blogs.models.rename_file)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('meta_title', models.TextField(blank=True, max_length=500, null=True)),
                ('meta_description', models.TextField(blank=True, max_length=500, null=True)),
                ('meta_keywords', models.TextField(blank=True, max_length=500, null=True)),
                ('canonical_tag', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('comment', models.TextField()),
                ('approve', models.BooleanField(default=False)),
                ('date', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('trending', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Tags',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Translate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('sq', 'Albanian'), ('am', 'Amharic'), ('ar', 'Arabic'), ('hy', 'Armenian'), ('as', 'Assamese'), ('ay', 'Aymara'), ('az', 'Azerbaijani'), ('bm', 'Bambara'), ('eu', 'Basque'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('bho', 'Bhojpuri'), ('bs', 'Bosnian'), ('bg', 'Bulgarian'), ('ca', 'Catalan'), ('ceb', 'Cebuano'), ('ny', 'Chichewa'), ('zh-CN', 'Chinese (Simplified)'), ('zh-TW', 'Chinese (Traditional)'), ('co', 'Corsican'), ('hr', 'Croatian'), ('cs', 'Czech'), ('da', 'Danish'), ('dv', 'Dhivehi'), ('doi', 'Dogri'), ('nl', 'Dutch'), ('en', 'English'), ('eo', 'Esperanto'), ('et', 'Estonian'), ('ee', 'Ewe'), ('tl', 'Filipino'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('gl', 'Galician'), ('ka', 'Georgian'), ('de', 'German'), ('el', 'Greek'), ('gn', 'Guarani'), ('gu', 'Gujarati'), ('ht', 'Haitian Creole'), ('ha', 'Hausa'), ('haw', 'Hawaiian'), ('iw', 'Hebrew'), ('hi', 'Hindi'), ('hmn', 'Hmong'), ('hu', 'Hungarian'), ('is', 'Icelandic'), ('ig', 'Igbo'), ('ilo', 'Ilocano'), ('id', 'Indonesian'), ('ga', 'Irish'), ('it', 'Italian'), ('ja', 'Japanese'), ('jw', 'Javanese'), ('kn', 'Kannada'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('rw', 'Kinyarwanda'), ('gom', 'Konkani'), ('ko', 'Korean'), ('kri', 'Krio'), ('ku', 'Kurdish (Kurmanji)'), ('ckb', 'Kurdish (Sorani)'), ('ky', 'Kyrgyz'), ('lo', 'Lao'), ('la', 'Latin'), ('lv', 'Latvian'), ('ln', 'Lingala'), ('lt', 'Lithuanian'), ('lg', 'Luganda'), ('lb', 'Luxembourgish'), ('mk', 'Macedonian'), ('mai', 'Maithili'), ('mg', 'Malagasy'), ('ms', 'Malay'), ('ml', 'Malayalam'), ('mt', 'Maltese'), ('mi', 'Maori'), ('mr', 'Marathi'), ('mni-Mtei', 'Meiteilon (Manipuri)'), ('lus', 'Mizo'), ('mn', 'Mongolian'), ('my', 'Myanmar (Burmese)'), ('ne', 'Nepali'), ('no', 'Norwegian'), ('or', 'Odia (Oriya)'), ('om', 'Oromo'), ('ps', 'Pashto'), ('fa', 'Persian'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pa', 'Punjabi'), ('qu', 'Quechua'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sm', 'Samoan'), ('sa', 'Sanskrit'), ('gd', 'Scots Gaelic'), ('nso', 'Sepedi'), ('sr', 'Serbian'), ('st', 'Sesotho'), ('sn', 'Shona'), ('sd', 'Sindhi'), ('si', 'Sinhala'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('so', 'Somali'), ('es', 'Spanish'), ('su', 'Sundanese'), ('sw', 'Swahili'), ('sv', 'Swedish'), ('tg', 'Tajik'), ('ta', 'Tamil'), ('tt', 'Tatar'), ('te', 'Telugu'), ('th', 'Thai'), ('ti', 'Tigrinya'), ('ts', 'Tsonga'), ('tr', 'Turkish'), ('tk', 'Turkmen'), ('ak', 'Twi'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('ug', 'Uyghur'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('cy', 'Welsh'), ('xh', 'Xhosa'), ('yi', 'Yiddish'), ('yo', 'Yoruba'), ('zu', 'Zulu')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, null=True)),
                ('image_1', models.ImageField(null=True, upload_to=blogs.models.rename_file)),
                ('image_2', models.ImageField(null=True, upload_to=blogs.models.rename_file)),
                ('youtube_url', models.URLField(null=True)),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('slug', models.SlugField(blank=True)),
                ('quote', models.TextField(blank=True, null=True)),
                ('short_description', models.TextField(null=True)),
                ('full_description', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('is_trending', models.BooleanField(default=False)),
                ('meta_title', models.TextField(blank=True, max_length=500, null=True)),
                ('meta_description', models.TextField(blank=True, max_length=500, null=True)),
                ('meta_keywords', models.TextField(blank=True, max_length=500, null=True)),
                ('canonical_tag', models.TextField(blank=True, max_length=500, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blogs.author')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blogs.category')),
                ('comments', models.ManyToManyField(blank=True, to='blogs.Comments')),
                ('tags', models.ManyToManyField(blank=True, to='blogs.Tags')),
            ],
        ),
    ]
